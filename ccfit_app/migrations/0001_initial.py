# Generated by Django 3.1.4 on 2021-01-09 20:48

import ccfit_app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', ccfit_app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('email_user', models.EmailField(max_length=80, null=True)),
                ('session_number', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MaxSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=5, null=True)),
                ('description', models.CharField(max_length=300, null=True)),
                ('workout', models.IntegerField(null=True)),
                ('pilates', models.IntegerField(null=True)),
                ('yoga', models.IntegerField(null=True)),
                ('spin', models.IntegerField(null=True)),
                ('jump', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pilates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('email_user', models.EmailField(max_length=80, null=True)),
                ('session_number', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Spin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('email_user', models.EmailField(max_length=80, null=True)),
                ('session_number', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('email_user', models.EmailField(max_length=80, null=True)),
                ('session_number', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Yoga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('email_user', models.EmailField(max_length=80, null=True)),
                ('session_number', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=80, null=True)),
                ('nickname', models.CharField(max_length=50, null=True)),
                ('gender', models.CharField(max_length=50, null=True)),
                ('type', models.CharField(choices=[('USER', 'USER'), ('TEACHER', 'TEACHER'), ('ADMINISTRATOR', 'ADMINISTRATOR')], max_length=15, null=True)),
                ('active', models.CharField(choices=[('INACTIVE', 'INACTIVE'), ('WORKOUT ONLY', 'WORKOUT ONLY'), ('ALL CLASSES', 'ALL CLASSES')], max_length=15, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('address1', models.CharField(max_length=300, null=True)),
                ('address2', models.CharField(max_length=300, null=True)),
                ('county', models.CharField(max_length=20, null=True)),
                ('country', models.CharField(max_length=20, null=True)),
                ('prefix', models.CharField(max_length=4, null=True)),
                ('phone', models.CharField(max_length=10, null=True)),
                ('registration_completed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
